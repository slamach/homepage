---
import { Image } from 'astro:assets';
import logoImage from '@/assets/logo.svg';
import { Icon } from 'astro-icon/components';
import { config } from '@/constants';
import IconLink from './IconLink.astro';
import Link from './Link.astro';

interface Props {
  className?: string;
}

const { className, ...rest } = Astro.props;
---

<header class:list={['header', className]} {...rest}>
  <a class="header__logo" href="/">
    <Image src={logoImage} alt="Dmitrii Sviridov's logo" loading="eager" />
  </a>
  <button
    id="header-menu-button"
    class="header__menu-button"
    type="button"
    aria-expanded="false"
    aria-controls="header-navigation"
    aria-label="Toggle menu"
  >
    <Icon
      id="header-menu-icon-open"
      class="header__menu-icon"
      name="menu"
      size={24}
      aria-hidden="true"
    />
    <Icon
      id="header-menu-icon-close"
      class="header__menu-icon hidden"
      name="cross"
      size={24}
      aria-hidden="true"
    />
  </button>
  <nav id="header-navigation" class="header__navigation">
    <ul class="header__navigation-list">
      <li>
        <Link className="header__navigation-link" inverted href="/articles"
          >Articles</Link
        >
      </li>
      <li>
        <Link
          className="header__navigation-link"
          inverted
          href={config.links.resume}>Resume</Link
        >
      </li>
    </ul>
    <ul class="header__actions-list">
      <li>
        <!-- TODO: Make RSS page -->
        <IconLink href="/rss.xml" iconName="rss" ariaLabel="RSS" />
      </li>
      <li>
        <!-- TODO: Make theme switch button -->
        <IconLink href="#" iconName="sun" ariaLabel="Switch theme" />
      </li>
    </ul>
  </nav>
</header>

<style>
  .hidden {
    display: none;
  }

  .header {
    position: relative;
    display: flex;
    align-items: center;
    padding: 16px 0;
    background-color: var(--color-bg);

    @media (--tablet) {
      padding: 32px 0;
    }
  }

  .header__logo {
    margin-right: auto;
  }

  .header__menu-button {
    padding: 8px;
    padding-right: 0;
    border: none;
    background: none;
    color: inherit;
    cursor: pointer;

    @media (--hover) {
      &:hover {
        color: var(--color-accent);
      }
    }

    @media (--tablet) {
      display: none;
    }
  }

  .header__navigation {
    @media (--mobile) {
      display: none;

      &.shown {
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
        top: 64px;
        padding: 0 8px;
      }
    }

    @media (--tablet) {
      display: flex;
      align-items: center;
      gap: 32px;
    }
  }

  .header__navigation-list {
    display: flex;
    align-items: center;
    gap: 16px;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .header__navigation-link {
    text-transform: lowercase;
    text-decoration: none;
    font-weight: 500;
  }

  .header__actions-list {
    display: flex;
    align-items: center;
    gap: 8px;
    margin: 0;
    padding: 0;
    list-style: none;
  }
</style>

<script>
  const navigation = document.getElementById('header-navigation');
  const menuButton = document.getElementById('header-menu-button');
  const menuIconOpen = document.getElementById('header-menu-icon-open');
  const menuIconClose = document.getElementById('header-menu-icon-close');

  menuButton?.addEventListener('click', () => {
    const isMenuOpen = menuButton?.getAttribute('aria-expanded') === 'true';

    if (isMenuOpen) {
      menuButton?.setAttribute('aria-expanded', 'false');
    } else {
      menuButton?.setAttribute('aria-expanded', 'true');
    }

    navigation?.classList.toggle('shown');
    menuIconOpen?.classList.toggle('hidden');
    menuIconClose?.classList.toggle('hidden');
  });
</script>
