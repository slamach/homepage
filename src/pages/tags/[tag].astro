---
import { getCollection } from 'astro:content';
import { ARTICLE_TAGS } from '@/constants';
import BaseLayout from '@/layouts/BaseLayout.astro';
import ArticlesList from '@/components/ArticlesList.astro';
import {
  ArticlesSortOrder,
  getSortedArticles,
} from '@/utils/getSortedArticles';

export const getStaticPaths = async () => {
  const allArticles = await getCollection('articles');

  return ARTICLE_TAGS.map((tag) => {
    const processedArticles = getSortedArticles(
      allArticles.filter((article) => article.data.tags?.includes(tag)),
      ArticlesSortOrder.CREATED_ON,
    );

    return {
      params: { tag },
      props: { articles: processedArticles },
    };
  });
};

const { tag } = Astro.params;
const { articles } = Astro.props;

const title = `Articles tagged #${tag}`;
const description =
  'Articles, news, and tutorials on ' +
  'front-end development and programming by Dmitrii Sviridov ' +
  `tagged #${tag}.`;

const isEmpty = articles.length === 0;
---

<BaseLayout title={title} description={description}>
  <h1 class="tag-page__title">
    Articles
    <span class="visually-hidden">tagged</span>
    <sup class="tag-page__title-tag">#{tag}</sup>
  </h1>
  {
    !isEmpty ? (
      <ArticlesList className="tag-page__articles-list" articles={articles} />
    ) : (
      <p class="tag-page__empty-text">No articles found</p>
    )
  }
</BaseLayout>

<style>
  .tag-page__title {
    margin: 0;
    margin-bottom: 16px;
    font-family: var(--font-family-heading);
    font-size: 30px;
    font-weight: 500;
    line-height: 36px;

    @media (--tablet) {
      margin-bottom: 18px;
      font-size: 36px;
      line-height: 44px;
    }
  }

  .tag-page__title-tag {
    font-family: var(--font-family-monospace);
    font-size: 14px;
    line-height: normal;

    @media (--tablet) {
      font-size: 16px;
    }
  }

  .tag-page__articles-list,
  .tag-page__empty-text {
    margin-bottom: 16px;

    @media (--tablet) {
      margin-bottom: 18px;
    }
  }
</style>
